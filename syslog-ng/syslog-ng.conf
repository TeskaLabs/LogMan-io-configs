@version: 3.12
@include "scl.conf"

options {
	frac_digits(3);
	ts-format(iso);
};

destination d_amqp {
	amqp(
		vhost("<PROVIDE VIRTUAL HOST>")
		host("lm-ha-01.logman.io")
		port(5477)
		ca-file("/opt/logman.io/etc/syslog-ng/ca.cert")
		username("<PROVIDE USER NAME>")
		password("<PROVIDE PASSWORD>")
		exchange("i")
		routing-key("")
		body("${MESSAGE}")
		persistent(yes)
		value-pairs(
			key("lm.*" rekey(shift(3)) )
			scope("sdata")
			exclude(".SDATA.timeQuality.*")
		)
		frac-digits(6)
		send-time-zone("UTC")
	);
};


source s_syslog {
	internal();
	system();
#	unix-dgram("/opt/logman.io/syslog-ng/var/log" flags(syslog-protocol));
};

parser p_syslog_remap {
	map-value-pairs(
		pair("lm.T" "s") # Syslog
		pair("lm.H" "$HOST")
		pair("lm.P" "$PROGRAM")
		pair("lm.f" "$FACILITY_NUM")
		pair("lm.l" "$PRI")
		pair("lm.t" "$UNIXTIME")
		pair("lm.p" "$PID")
	);
};

log {
	source(s_syslog);
	parser(p_syslog_remap);
	destination(d_amqp);
};


# Apache configuration:
# CustomLog "|/usr/bin/logger -u /opt/logman.io/syslog-ng/var/apache_access_log" vhost_combined
source s_apache_aal {
		unix-stream("/opt/logman.io/syslog-ng/var/apache_access_log");
};

parser p_apache_aal {

	csv-parser(
		dialect(escape-double-char)
		flags(strip-whitespace)
		delimiters(" ")
		template("${MESSAGE}")
		quote-pairs('""[]')
		columns(
			"lm.P",
			"lm.aal.i", # Client IP
			"lm.aal.I", # Ident
			"lm.aal.a", # Auth
			".TMP.TSTAMP",
			"MESSAGE",
			"lm.aal.c", # Response code
			"lm.aal.b", # Bytes
			"lm.aal.r", # Referrer
			"lm.aal.A", # Agent
			"lm.aal.D" # Duration
		)
	);

	csv-parser(
		template("${MESSAGE}")
		delimiters(" ")
		dialect(escape-none)
		flags(strip-whitespace)
		columns(
			"lm.aal.m", # Method
			"lm.aal.p", # Request path
			"lm.aal.v"  # HTTP version
		)
	);

	date-parser(format("%d/%b/%Y:%H:%M:%S %z"), template("${.TMP.TSTAMP}"));

	map-value-pairs(
			pair("lm.T" "a") # Apache Access Log
			pair("lm.H" "$HOST")
			pair("lm.t" "$S_UNIXTIME")
	);
};

log {
		source(s_apache_aal);
		parser(p_apache_aal);
		destination(d_amqp);
};


# Telegraf
source s_telegraf {
	unix-dgram("/var/run/logmanio-telegraf.sock" flags(no-parse));
};

parser p_telegraf {
	map-value-pairs(
		pair("lm.T" "T") # Telegraf telemetry
		pair("lm.H" "$HOST")
	);
};

log {
	source(s_telegraf);
	parser(p_telegraf);
	destination(d_amqp);
};
